{
  "name": "web-service-root",
  "private": "true",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "docker:build": "lerna run --scope 'svc-{db,httpapi,proxy,webclient}-*' docker:build",
    "docker:build2": "lerna run --scope svc-proxy-nginx docker:build",
    "_docker:init:nginx": "mkdir -p ./svc-storage/nginx/readwrite/run;mkdir -p ./svc-storage/nginx/readwrite/log;mkdir -p ./svc-storage/nginx/readwrite/log/{a.com,b.com,c.com}",
    "_docker:init:nestjs": "mkdir -p ./svc-storage/var/mysql/initdb.d && cp ./svc-httpapi/nestjs/initdb.d/* ./svc-storage/var/mysql/initdb.d",
    "docker:init": "yarn _docker:init:nginx && yarn _docker:init:nestjs",
    "docker:up": "docker-compose -p web-service -f web-service.stack.yml up",
    "docker:check:db": "curl -LI http://localhost:8080 >>/dev/null 2>&1 && echo ok || echo !!! failure",
    "docker:check:api": "curl -LI http://localhost:1337/api >>/dev/null 2>&1 && echo ok || echo !!! failure",
    "docker:check:proxy": "curl -LI http://localhost:8000 >>/dev/null 2>&1 && echo ok || echo !!! failure",
    "docker:check:web": "curl -LI http://localhost:3000 >>/dev/null 2>&1 && echo ok || echo !!! failure",
    "docker:check": "yarn docker:check:db && yarn docker:check:api && yarn docker:check:proxy && yarn docker:check:web",
    "docker:down": "docker-compose -p web-service -f web-service.stack.yml down",
    "proxy:reload": "docker exec -it SVC_PROXY nginx -s reload"
  },
  "license": "MIT",
  "devDependencies": {
    "lerna": "^4.0.0"
  }
}
